{"version":3,"sources":["models/format.ts","store/form/types.ts","components/id-field/IdField.tsx","components/about-field/AboutField.tsx","components/form/Form.tsx","hooks/useTypedSelector.ts","store/form/actions.ts","API/index.ts","API/resume.ts","store/form/thunks.ts","store/resume/types.ts","store/resume/actions.ts","store/resume/thunks.ts","store/actions.ts","hooks/useAction.ts","components/box-center/BoxCenter.tsx","pages/PageMain.tsx","utils/formation.ts","components/resume/styles.ts","asset/icons/skype-icon.svg","asset/icons/icq-icon.svg","components/contacts/Contacts.tsx","components/resume/Resume.tsx","components/paper-close/PaperClose.tsx","pages/PageResume.tsx","pages/Page404.tsx","components/layouts/LayoutMain.tsx","components/App.tsx","components/them.ts","store/reducers.ts","store/form/reducer.ts","store/resume/reducer.ts","store/index.ts","index.tsx"],"names":["ExportFormat","IFormActionTypes","useStyles","makeStyles","theme","createStyles","smallAvatar","width","spacing","height","marginRight","cleanBtn","background","linkLable","opacity","linkInput","transition","editStyle","IdField","idCheck","resume","loading","resetResume","classes","useState","error","setError","touched","setTouched","editMode","setEditMode","link","setLink","LinkRef","useRef","useEffect","id","current","focus","lableStyle","root","iconAdornment","startAdornment","InputAdornment","position","Avatar","alt","name","src","photo","className","Link","href","target","color","endAdornment","IconButton","onClick","LinkHandler","res","split","pop","String","getId","test","testId","TextField","label","helperText","length","value","onChange","e","text","fullWidth","disabled","InputProps","onBlur","InputLabelProps","required","inputRef","onKeyUp","key","AboutField","autoFocus","showHelperText","showLable","onChangeText","multiline","inputProps","maxLength","sybmitBtn","borderRadius","Form","sybmit","about","setAbout","format","setFormat","onSubmit","preventDefault","sybmitForm","Grid","container","alignItems","item","xs","FormControl","component","FormLabel","RadioGroup","event","row","FormControlLabel","withOutName","control","Radio","withName","Button","type","variant","useTypedSelector","useSelector","API","HTTP_STATUS","form__setResumePreview","resumePreview","FORM__SET_RESUME_PREVIEW","payload","form__setAbout","FORM__SET_ABOUT","form__setFormat","FORM__SET_FORMAT","form__setLoading","FORM__SET_LOADING","ApiResume","axios","getResume","get","then","d","data","getResumeWithFormat","this","Api","create","baseURL","createAPI","IResumeActionTypes","form__getResumePreview","dispatch","getState","a","response","resultCode","console","resume__setResume","RESUME__SET_RESUME","resume__setLoading","RESUME__SET_LOADING","resume__getResume","ActionCreators","FormActionCreators","FormThunksCreators","ResumeActionCreators","ResumeThunksCreators","useActions","useDispatch","bindActionCreators","content","display","flexDirection","justifyContent","minHeight","padding","margin","BoxCenter","children","maxWidth","Box","style","PageMain","form","state","history","useHistory","Container","Typography","align","paragraph","push","mt","dataFormat","replace","agePrefix","age","count","mobileBreakPoint","useStylesResume","header","marginBottom","upperText","textTransform","avatar","title","paddingLeft","subtitle","fontSize","fontWeight","lable","palette","secondary","skils","main","left","top","backgroundColor","primary","bottom","mainItem","body","info","editBtn","marginLeft","cursor","contact","wordBreak","Contacts","contacts","area","map","c","SkypeIcon","IcqIcon","cell","Resume","aboutEdit","setAboutEdit","mb","medium","gender","birth_date","language","l","level","education","i","gutterBottom","organization","result","year","skill_set","s","Chip","experience","job","company","start","end","description","closeBtn","right","paper","transform","border","boxShadow","PaperClose","onClose","React","checked","setChecked","Fade","timeout","in","Paper","setTimeout","paddingTop","paddingBottom","smallestBtn","chip","noPrint","PageResume","showLink","setShowLink","showResume","setShowResume","location","useLocation","search","slice","pathname","getUrlParams","Fab","window","print","aria-label","underline","CircularProgress","Page404","RouteLink","to","LayoutMain","CssBaseline","exact","path","render","unstable_createMuiStrictModeTheme","App","StoreSection","ThemeProvider","initialState","rootReducer","combineReducers","action","composeEnhancers","composeWithDevTools","trace","traceLimit","STORE","createStore","applyMiddleware","reduxThunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.036bc1ed.chunk.js","sourcesContent":["export enum ExportFormat {\r\n    withName = 'withName',\r\n    withOutName = 'withOutName',\r\n}","import { ExportFormat } from \"../../models/format\";\r\nimport { IResumePreview } from \"../../models/resume\";\r\n\r\nexport enum IFormActionTypes {\r\n  FORM__SET_RESUME_PREVIEW = \"[FORM] SET_RESUME_PREVIEW\",\r\n  FORM__SET_ABOUT = \"[FORM] SET_ABOUT\",\r\n  FORM__SET_FORMAT = \"[FORM] SET_FORMAT\",\r\n  FORM__SET_LOADING = \"[FORM] SET_LOADING\",\r\n  FORM__SET_TODO = \"[FORM] SET_TODO\",\r\n}\r\n\r\n// Типы ActionCreators\r\ninterface SetResumePreviewAction {\r\n  type: IFormActionTypes.FORM__SET_RESUME_PREVIEW;\r\n  payload: IResumePreview | null;\r\n}\r\ninterface SetAboutAction {\r\n  type: IFormActionTypes.FORM__SET_ABOUT;\r\n  payload: string;\r\n}\r\ninterface SetFormatAction {\r\n  type: IFormActionTypes.FORM__SET_FORMAT;\r\n  payload: ExportFormat;\r\n}\r\ninterface SetLoadingAction {\r\n  type: IFormActionTypes.FORM__SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\n\r\n// Общий тип Action\r\nexport type FormAction =\r\n  | SetResumePreviewAction\r\n  | SetFormatAction\r\n  | SetLoadingAction\r\n  | SetAboutAction;\r\n","import { Link, TextField, Avatar, InputAdornment, makeStyles, Theme, createStyles, IconButton } from '@material-ui/core';\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { FC } from 'react';\r\nimport { IResumePreview } from '../../models/resume';\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        smallAvatar: {\r\n            width: theme.spacing(4),\r\n            height: theme.spacing(4),\r\n            marginRight: 10\r\n        },\r\n        cleanBtn: {\r\n            '&:hover': {\r\n                background: 'none',\r\n            }\r\n        },\r\n        linkLable: {\r\n            opacity: 0\r\n        },\r\n\r\n        linkInput: {\r\n            height: 32,\r\n            transition: 'height 0.2s'\r\n        },\r\n        editStyle: {\r\n            height: 48,\r\n            transition: 'height 0.3s ease'\r\n        }\r\n\r\n    }),\r\n);\r\n\r\nexport interface IonChange {\r\n    (value: string): void;\r\n}\r\nexport interface IidCheck {\r\n    (link: string): void;\r\n}\r\n\r\ninterface IProps {\r\n    idCheck: IidCheck\r\n    resume: IResumePreview | null\r\n    loading: boolean\r\n    resetResume: () => void\r\n}\r\n\r\nexport const IdField: FC<IProps> = ({ idCheck, resume, loading, resetResume }) => {\r\n    const classes = useStyles();\r\n\r\n    const [error, setError] = useState('');\r\n    const [touched, setTouched] = useState(false);\r\n    const [editMode, setEditMode] = useState(resume === null);\r\n    const [link, setLink] = useState('');\r\n    const LinkRef = useRef<HTMLHeadingElement>(null);\r\n\r\n    const getId = (link: string) => {\r\n        const res = link.split('hh.ru/resume/').pop();\r\n        return String(res);\r\n    }\r\n\r\n    const testId = (id: string) => {\r\n        return (/^\\d*[a-zA-Z\\d]*$/).test(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (resume?.id) setLink(resume?.id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!loading && touched) {\r\n            setError('Пользователь не найден')\r\n        }\r\n        if (!loading && resume !== null) {\r\n            setEditMode(false);\r\n            setError('')\r\n        }\r\n    }, [loading]);\r\n\r\n    useEffect(() => {\r\n        if (editMode && touched) LinkRef.current?.focus();\r\n    }, [editMode])\r\n\r\n    const lableStyle = !editMode ? { classes: { root: classes.linkLable } } : {};\r\n\r\n    const closePreview = () => {\r\n        resetResume();\r\n        setTouched(true);\r\n        setEditMode(true);\r\n    }\r\n\r\n\r\n\r\n    const iconAdornment = !editMode ? {\r\n        classes: { root: `${classes.linkInput} ${classes.editStyle}` },\r\n        startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n                <Avatar alt={resume?.name} src={resume?.photo} className={classes.smallAvatar} ></Avatar>\r\n                <Link href={`https://hh.ru/resume/${resume?.id}`} target=\"_blank\" color=\"textPrimary\">\r\n                    {resume?.name}\r\n                </Link>\r\n            </InputAdornment>\r\n        ),\r\n        endAdornment: (\r\n            <IconButton className={classes.cleanBtn} onClick={closePreview}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n        )\r\n    } : { classes: { root: classes.linkInput }, };\r\n\r\n    const LinkHandler = () => {\r\n        const id = getId(link);\r\n        if (id) {\r\n            if (testId(id)) {\r\n                idCheck(id);\r\n                setLink(id);\r\n            } else setError('Поле содержит запрещенные символы')\r\n        }\r\n    };\r\n\r\n    const onChangeHandler = (text: string) => {\r\n        setLink(text);\r\n        setTouched(true);\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            label=\"Ссылка\"\r\n            helperText={error.length > 0 ? error : 'Введите ссылку или id'}\r\n            name=\"link\"\r\n            value={editMode ? link : ''}\r\n            onChange={(e) => onChangeHandler(e.target.value)}\r\n            fullWidth\r\n            disabled={loading || !editMode}\r\n            InputProps={iconAdornment}\r\n            onBlur={() => LinkHandler()}\r\n            error={error.length > 0}\r\n            InputLabelProps={lableStyle}\r\n            required\r\n            inputRef={LinkRef}\r\n            onKeyUp={e => { if (e.key === 'Enter') LinkHandler() }}\r\n        />\r\n    )\r\n}\r\n\r\n","import { TextField } from '@material-ui/core'\r\nimport React, { FC, FocusEvent } from 'react'\r\n\r\ninterface IProps {\r\n    showHelperText?: boolean\r\n    showLable?: boolean\r\n    value: string\r\n    autoFocus?: boolean\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n    onChangeText: (text: string) => void\r\n}\r\n\r\nexport const AboutField: FC<IProps> = ({ autoFocus, onBlur, showHelperText, showLable, value, onChangeText }) => {\r\n    return (\r\n        <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label={showLable ? 'О кандидате' : ''}\r\n            name=\"about\"\r\n            value={value}\r\n            onChange={(e) => onChangeText(e.target.value)}\r\n            multiline\r\n            fullWidth\r\n            onBlur={onBlur}\r\n            autoFocus={autoFocus}\r\n            helperText={showHelperText ? 'Максимальная длинна 300 символов' : ''}\r\n            inputProps={{ maxLength: 300 }}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, { FC } from \"react\";\r\nimport { Grid, Button, Radio, RadioGroup, FormLabel, FormControl, FormControlLabel, makeStyles, Theme, createStyles } from '@material-ui/core';\r\nimport { ExportFormat } from \"../../models/format\";\r\nimport { IidCheck, IdField } from \"../id-field/IdField\";\r\nimport { IResumePreview } from \"../../models/resume\";\r\nimport { AboutField } from \"../about-field/AboutField\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        sybmitBtn: {\r\n            height: 48,\r\n            borderRadius: 87\r\n        },\r\n    }),\r\n);\r\n\r\ninterface IProps {\r\n    resume: IResumePreview | null\r\n    idCheck: IidCheck\r\n    sybmit: () => void\r\n    loading: boolean\r\n\r\n    about: string\r\n    setAbout: (value: string) => void\r\n\r\n    format: ExportFormat\r\n    setFormat: (value: ExportFormat) => void\r\n\r\n    resetResume: () => void\r\n}\r\n\r\nexport const Form: FC<IProps> = ({ resume, idCheck, sybmit, about, setAbout, format, setFormat, loading, resetResume }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const formatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormat((event.target as HTMLInputElement).value as ExportFormat);\r\n    };\r\n\r\n    const sybmitForm = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        sybmit();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={e => { sybmitForm(e) }}>\r\n            <Grid container alignItems=\"flex-start\" spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <IdField\r\n                        loading={loading}\r\n                        idCheck={idCheck}\r\n                        resume={resume}\r\n                        resetResume={resetResume} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\" >Выбор формата экспорта</FormLabel>\r\n                        <RadioGroup value={format} name=\"format\" onChange={formatChange} row>\r\n                            <FormControlLabel value={ExportFormat.withOutName} control={<Radio color=\"primary\" />} label=\"IBS без ФИО\" />\r\n                            <FormControlLabel value={ExportFormat.withName} control={<Radio color=\"primary\" />} label=\"IBS c ФИО\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <AboutField\r\n                        showLable={true}\r\n                        value={about}\r\n                        showHelperText={true}\r\n                        onChangeText={setAbout} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.sybmitBtn}>Загрузить</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form >\r\n    )\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../store/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<IRootState> = useSelector;\r\n","import { FormAction, IFormActionTypes } from \"./types\";\r\nimport { IResumePreview } from './../../models/resume';\r\nimport { ExportFormat } from \"../../models/format\";\r\n\r\nexport const form__setResumePreview = (resumePreview: IResumePreview | null): FormAction => ({\r\n  type: IFormActionTypes.FORM__SET_RESUME_PREVIEW,\r\n  payload: resumePreview,\r\n});\r\n\r\nexport const form__setAbout = (value: string): FormAction => ({\r\n  type: IFormActionTypes.FORM__SET_ABOUT,\r\n  payload: value,\r\n});\r\n\r\nexport const form__setFormat = (format: ExportFormat): FormAction => ({\r\n  type: IFormActionTypes.FORM__SET_FORMAT,\r\n  payload: format,\r\n});\r\n\r\nexport const form__setLoading = (value: boolean): FormAction => ({\r\n  type: IFormActionTypes.FORM__SET_LOADING,\r\n  payload: value,\r\n});","import axios, { AxiosInstance } from \"axios\";\r\nimport { ApiResume } from \"./resume\";\r\n\r\nclass Api {\r\n  private axios: AxiosInstance;\r\n  resume: ApiResume;\r\n  constructor(axios: AxiosInstance) {\r\n    this.axios = axios;\r\n    this.resume = new ApiResume(axios);\r\n  }\r\n}\r\n\r\n//главный объект для запросов\r\nlet API: Api;\r\nconst createAPI = (headers = {}) => {\r\n  API = new Api(\r\n    axios.create({\r\n      baseURL: \"http://localhost:3007/\",//\"http://back5.apps.ocp4.trainee.ru.com/\",\r\n      // withCredentials: true, \r\n      // headers: {\r\n      //   //  \"Authorization\": \"API_KEY\"\r\n      // },\r\n    })\r\n  );\r\n};\r\n\r\ncreateAPI({});\r\n\r\nexport { API, createAPI };\r\n\r\nexport enum HTTP_STATUS {\r\n  AppError = 100,\r\n  ServerError = 500,\r\n  Access = 200,\r\n  Error = 400,\r\n  Unauthorized = 401,\r\n  Forbidden = 403,\r\n  BadRequest = 400,\r\n  NotFound = 404,\r\n}\r\n","import { AxiosInstance } from \"axios\";\r\nimport { IResume, IResumePreview } from '../models/resume';\r\nimport { ExportFormat } from '../models/format';\r\n\r\ntype IResumePreviewResponse = {\r\n  resultCode: number;\r\n  resume: IResumePreview;\r\n  message: string;\r\n}\r\n\r\ntype IResumeResponse = {\r\n  resultCode: number;\r\n  resume: IResume;\r\n  message: string;\r\n}\r\n\r\nexport class ApiResume {\r\n  private axios: AxiosInstance;\r\n\r\n  constructor(axios: AxiosInstance) {\r\n    this.axios = axios;\r\n  }\r\n\r\n  getResume = (id: string) =>\r\n    this.axios.get<IResumePreviewResponse>(`/resume/${id}`).then((d) => d.data);\r\n\r\n  getResumeWithFormat = (id: string, format: ExportFormat) =>\r\n    this.axios.get<IResumeResponse>(`/resume/${id}/${format}`).then((d) => d.data);\r\n}\r\n","import { GetState } from \"../index\";\r\nimport { form__setLoading, form__setResumePreview } from \"./actions\";\r\nimport { API } from \"../../API\";\r\n\r\nexport const form__getResumePreview = (id: string) => async (dispatch: any, getState: GetState) => {\r\n  dispatch(form__setLoading(true));\r\n  try {\r\n    const response = await API.resume.getResume(id);\r\n    if (response.resultCode === 1) {\r\n      dispatch(form__setResumePreview(response.resume));\r\n      dispatch(form__setLoading(false));\r\n    } if (response.resultCode === 0) {\r\n      dispatch(form__setLoading(false));\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Ошибка при запросе...\", e);\r\n  }\r\n};\r\n","import { IResume } from \"../../models/resume\";\r\n\r\nexport enum IResumeActionTypes {\r\n  RESUME__SET_RESUME = \"[RESUME] SET_RESUME\",\r\n  RESUME__SET_LOADING = \"[RESUME] SET_LOADING\",\r\n}\r\n\r\n// Типы ActionCreators\r\ninterface SetResumeAction {\r\n  type: IResumeActionTypes.RESUME__SET_RESUME;\r\n  payload: IResume | null;\r\n}\r\ninterface SetLoadingAction {\r\n  type: IResumeActionTypes.RESUME__SET_LOADING;\r\n  payload: boolean | null;\r\n}\r\n\r\n\r\n// Общий тип Action\r\nexport type ResumeAction =\r\n  | SetLoadingAction\r\n  | SetResumeAction;\r\n","import { ResumeAction, IResumeActionTypes } from \"./types\";\r\nimport { IResume } from '../../models/resume';\r\n\r\nexport const resume__setResume = (resume: IResume | null): ResumeAction => ({\r\n  type: IResumeActionTypes.RESUME__SET_RESUME,\r\n  payload: resume,\r\n});\r\nexport const resume__setLoading = (value: boolean | null): ResumeAction => ({\r\n  type: IResumeActionTypes.RESUME__SET_LOADING,\r\n  payload: value,\r\n});","import { GetState } from \"../index\";\r\nimport { API } from \"../../API\";\r\nimport { resume__setLoading, resume__setResume } from './actions';\r\nimport { ExportFormat } from \"../../models/format\";\r\n\r\nexport const resume__getResume = (id: string, format: ExportFormat) => async (dispatch: any, getState: GetState) => {\r\n\r\n  dispatch(resume__setLoading(true));\r\n  try {\r\n    const response = await API.resume.getResumeWithFormat(id, format);\r\n    if (response.resultCode === 1) {\r\n      dispatch(resume__setResume(response.resume));\r\n      dispatch(resume__setLoading(false));\r\n    } else if (response.resultCode === 0) {\r\n      dispatch(resume__setLoading(false));\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Ошибка при запросе...\", e);\r\n  }\r\n};\r\n","import * as FormActionCreators from \"./form/actions\";\r\nimport * as FormThunksCreators from \"./form/thunks\";\r\nimport * as ResumeActionCreators from \"./resume/actions\";\r\nimport * as ResumeThunksCreators from \"./resume/thunks\";\r\n\r\nexport const ActionCreators = {\r\n  ...FormActionCreators,\r\n  ...FormThunksCreators,\r\n  ...ResumeActionCreators,\r\n  ...ResumeThunksCreators\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ActionCreators } from \"../store/actions\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","import { Box, makeStyles, Theme } from '@material-ui/core';\r\nimport React, { FC } from 'react'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        minHeight: '100vh',\r\n        padding: '16px 0',\r\n        margin: '0 auto',\r\n    },\r\n\r\n}));\r\ninterface IProps {\r\n    children: React.ReactNode\r\n    maxWidth?: number\r\n}\r\n\r\nexport const BoxCenter: FC<IProps> = ({ children, maxWidth }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.content} style={{ maxWidth }}>\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Typography, Grid, Box, Link, Container } from '@material-ui/core';\r\nimport { Form } from '../components/form/Form';\r\nimport { IidCheck } from '../components/id-field/IdField';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useAction';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BoxCenter } from '../components/box-center/BoxCenter';\r\n\r\n\r\nexport const PageMain = () => {\r\n\r\n    const { form } = useTypedSelector(state => state)\r\n    const { form__getResumePreview, form__setAbout, form__setFormat, form__setResumePreview } = useActions()\r\n    const history = useHistory();\r\n    const idCheck: IidCheck = (id: string) => {\r\n        form__getResumePreview(id);\r\n    }\r\n    const sybmit = () => {\r\n        if (form.resumePreview) history.push(`/resume/${form.resumePreview.id}?${form.format}`)\r\n    }\r\n    const resetId = () => {\r\n        form__setResumePreview(null)\r\n    }\r\n    return (\r\n        <Container>\r\n            <BoxCenter maxWidth={404}>\r\n                <Grid container >\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" align=\"center\" component=\"h2\" paragraph >\r\n                            Резюме конвертер\r\n                        </Typography>\r\n                        {/*     <Typography align=\"center\" variant=\"body2\" paragraph >\r\n                            Для использования необходимо\r\n                            <Link href={`https://hh.ru/oauth/authorize?  response_type=code&  client_id=QLK6K3JI3SOA0IJ3AVUPFADT8C7T0FKNPCJ7L330P7S59EDQ8UTVC1TLJ03T81P6&redirect_uri=http:\\\\vk.com`}>войти</Link>{` `} или зарегистрироваться на сайте hh.ru\r\n                        </Typography> */}\r\n                        <Typography align=\"center\" variant=\"body2\" paragraph >\r\n                            Данный сервис предназначен для автоматизации конвертирования резюме с сайта <Link href=\"https://hh.ru\">\r\n                                hh.ru\r\n                            </Link>.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Form sybmit={sybmit}\r\n                            about={form.about}\r\n                            setAbout={form__setAbout}\r\n                            idCheck={idCheck}\r\n                            resume={form.resumePreview}\r\n                            format={form.format}\r\n                            setFormat={form__setFormat}\r\n                            loading={form.loading}\r\n                            resetResume={resetId} />\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\r\n                            <Typography variant=\"subtitle2\" >\r\n                                <Link href=\"https://git.trainee.ru.com/group5/g5front\">\r\n                                    Как это работает?\r\n                                </Link>\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </BoxCenter>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","export const dataFormat = (data: string) => {\r\n    const res = data.replace(/-/g, '/');\r\n    return res\r\n}\r\n\r\nexport const agePrefix = (age: number) => {\r\n    let txt;\r\n    let count = age % 100;\r\n    if (count >= 5 && count <= 20) {\r\n        txt = 'лет';\r\n    } else {\r\n        count = count % 10;\r\n        if (count === 1) {\r\n            txt = 'год';\r\n        } else if (count >= 2 && count <= 4) {\r\n            txt = 'года';\r\n        } else {\r\n            txt = 'лет';\r\n        }\r\n    }\r\n    return txt;\r\n}\r\n\r\nexport const cellFormat = (cell: string) => {\r\n    const res = cell.replace(/^([\\d+]{2})(\\d{3})(\\d{3})(\\d{2})(\\d{2})+$/, \"$1 $2 $3 $4 $5\");\r\n    return res\r\n}","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst mobileBreakPoint = 590;\r\nexport const useStylesResume = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        header: {\r\n            alignItems: \"center\",\r\n            justifyContent: 'center',\r\n            marginBottom: theme.spacing(2),\r\n\r\n            [`@media (max-width: ${mobileBreakPoint}px)`]: {\r\n                flexDirection: 'column',\r\n                alignItems: \"flex-start\",\r\n            },\r\n            '@media print': {\r\n                flexDirection: 'row',\r\n                alignItems: \"center\",\r\n            },\r\n        },\r\n        upperText: {\r\n            textTransform: 'uppercase'\r\n        },\r\n        avatar: {\r\n            width: theme.spacing(18),\r\n            height: theme.spacing(18),\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        title: {\r\n            [`@media (max-width: ${mobileBreakPoint}px)`]: {\r\n                maxWidth: '100%',\r\n                paddingLeft: 0,\r\n            },\r\n        },\r\n\r\n        subtitle: {\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n        lable: {\r\n            fontWeight: 500,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: theme.palette.text.secondary\r\n        },\r\n        skils: {\r\n            '& div': {\r\n                marginRight: theme.spacing(1),\r\n                marginBottom: theme.spacing(1),\r\n            }\r\n        },\r\n        main: {\r\n            position: 'relative',\r\n            '&>div': {\r\n                paddingLeft: theme.spacing(2),\r\n            },\r\n            '&:after': {\r\n                content: '\"\"',\r\n                width: 2,\r\n                height: '100%',\r\n                position: 'absolute',\r\n                left: 4,\r\n                top: 16,\r\n                backgroundColor: theme.palette.primary.main,\r\n            },\r\n            '&:before': {\r\n                content: '\"\"',\r\n                width: 9,\r\n                height: 9,\r\n\r\n                position: 'absolute',\r\n                left: 0,\r\n                borderRadius: '50%',\r\n                bottom: -16,\r\n                backgroundColor: theme.palette.primary.main,\r\n            },\r\n            [`@media (max-width: ${mobileBreakPoint}px)`]: {\r\n                maxWidth: '100%'\r\n            },\r\n        },\r\n        mainItem: {\r\n            position: 'relative',\r\n            '&:before': {\r\n                content: '\"\"',\r\n                width: 9,\r\n                height: 9,\r\n                position: 'absolute',\r\n                left: -3 - theme.spacing(1),\r\n                borderRadius: '50%',\r\n                top: 16,\r\n                backgroundColor: theme.palette.primary.main,\r\n            }\r\n        },\r\n        paragraph: {\r\n            position: 'relative',\r\n            paddingLeft: theme.spacing(1),\r\n            '&:before': {\r\n                content: '\"\"',\r\n                width: 5,\r\n                height: 5,\r\n                position: 'absolute',\r\n                left: -2,\r\n                borderRadius: '50%',\r\n                top: 5,\r\n                backgroundColor: theme.palette.primary.main,\r\n            },\r\n\r\n            '@media print': {\r\n                display: 'block',\r\n            },\r\n        },\r\n        body: {\r\n            [`@media (max-width: ${mobileBreakPoint}px)`]: {\r\n                flexDirection: 'column'\r\n            },\r\n            '@media print': {\r\n                flexDirection: 'row'\r\n            },\r\n        },\r\n        info: {\r\n            [`@media (max-width: ${mobileBreakPoint}px)`]: {\r\n                maxWidth: '100%'\r\n            },\r\n        },\r\n        editBtn: {\r\n            fontWeight: 500,\r\n            color: theme.palette.text.secondary,\r\n            fontSize: '14px',\r\n            textTransform: 'none',\r\n            marginLeft: theme.spacing(1),\r\n            cursor: 'pointer',\r\n            '@media print': {\r\n                display: 'none'\r\n            }\r\n        },\r\n\r\n\r\n    }),\r\n);\r\n","export default __webpack_public_path__ + \"static/media/skype-icon.adbaf49f.svg\";","export default __webpack_public_path__ + \"static/media/icq-icon.3130c8e6.svg\";","import { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport React, { FC } from 'react'\r\nimport { IContact } from '../../models/resume-items';\r\n\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport MapIcon from \"@material-ui/icons/Room\";\r\nimport SiteIcon from \"@material-ui/icons/Language\";\r\n\r\nimport { cellFormat } from '../../utils/formation';\r\nimport SkypeIcon from \"./../../asset/icons/skype-icon.svg\"\r\nimport IcqIcon from \"./../../asset/icons/icq-icon.svg\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        contact: {\r\n            fontSize: 14,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginBottom: theme.spacing(1),\r\n\r\n            '& svg,img': {\r\n                width: 20,\r\n                height: 20,\r\n                marginRight: theme.spacing(1) + 4,\r\n            }\r\n        },\r\n        lable: {\r\n            wordBreak: 'break-all',\r\n            fontSize: 14,\r\n            fontWeight: 500\r\n        }\r\n    }),\r\n);\r\n\r\n\r\ninterface IProps {\r\n    contacts: Array<IContact> | null\r\n    area: string\r\n}\r\n\r\nexport const Contacts: FC<IProps> = ({ contacts, area }) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {contacts?.map(c => {\r\n                return (\r\n                    <div key={c.type} className={classes.contact}>\r\n                        {{\r\n                            'cell': <PhoneIcon />,\r\n                            'email': <MailIcon />,\r\n                            'site': <SiteIcon />,\r\n                            'skype': <img src={SkypeIcon} alt=\"skype\" />,\r\n                            'icq': <img src={IcqIcon} alt=\"icq\" />\r\n                        }[c.type]}\r\n\r\n                        <Typography className={classes.lable}>\r\n                            {c.type === 'cell' ? cellFormat(c.value) : c.value}\r\n                        </Typography>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n            {area ? (\r\n                <div className={classes.contact}>\r\n                    <MapIcon />\r\n                    <Typography variant=\"body2\" >\r\n                        {area}\r\n                    </Typography>\r\n                </div>\r\n            ) : ''}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { FC, useState } from 'react'\r\nimport { Avatar, Typography, Box, Grid, Chip } from '@material-ui/core';\r\nimport { IResume } from '../../models/resume';\r\nimport { ExportFormat } from '../../models/format';\r\nimport { agePrefix, dataFormat } from '../../utils/formation';\r\nimport { useStylesResume } from './styles';\r\nimport { AboutField } from '../about-field/AboutField';\r\nimport { Contacts } from '../contacts/Contacts';\r\n\r\ninterface IProps {\r\n    data: IResume | null\r\n    about: string\r\n    setAbout: (value: string) => void\r\n    format: ExportFormat\r\n}\r\n\r\nconst Resume: FC<IProps> = ({ data, about, setAbout, format }) => {\r\n    const classes = useStylesResume();\r\n\r\n    const [aboutEdit, setAboutEdit] = useState(false);\r\n    return (\r\n        <>\r\n            <Box mb={4}>\r\n                <Grid container className={classes.header}>\r\n                    <Grid item xs={4}>\r\n                        <Avatar\r\n                            alt={data?.name}\r\n                            src={format === ExportFormat.withName && data?.photo ? data?.photo.medium : ''}\r\n                            className={classes.avatar} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={8} className={classes.title}>\r\n                        {format === ExportFormat.withName && <Typography variant=\"h5\" component=\"h2\" className={classes.upperText} >\r\n                            {data?.name}\r\n                        </Typography>}\r\n                        <Typography color=\"primary\" variant={`${format === ExportFormat.withOutName ? 'h5' : 'subtitle2'}`} className={classes.upperText} >\r\n                            {data?.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" >\r\n                            {`${data?.gender === 'male' && 'Мужчина'}, ${data?.age && (data?.age + ' ' + agePrefix(data?.age))},  ${data?.birth_date && dataFormat(data?.birth_date)}`} {/*   Мужчина, 23 года, 26/04/1998 */}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n            <Grid container spacing={2} className={classes.body}>\r\n                <Grid xs={4} item className={classes.info}>\r\n                    <Grid container spacing={3}>\r\n                        {(data?.area || data?.contacts) ? (\r\n                            <Grid item xs={12}>\r\n                                <Contacts area={data?.area} contacts={data?.contacts} />\r\n                            </Grid>\r\n                        ) : ''}\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography className={classes.subtitle} >\r\n                                Языки\r\n                            </Typography>\r\n                            {data?.language && data?.language.map(l => {\r\n                                return <Typography key={l.id} className={classes.text}>\r\n                                    {l.name} {` `} (<span style={{ textTransform: 'capitalize' }}>{l.level}</span>)\r\n                                </Typography>\r\n                            })\r\n                            }\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography className={classes.subtitle} >\r\n                                Образование\r\n                            </Typography>\r\n                            {data?.education && data?.education.map((e, i) => {\r\n                                return (\r\n                                    <Box mb={2} key={i}>\r\n                                        <Typography variant=\"body2\" className={classes.lable}>\r\n                                            {e.name}\r\n                                        </Typography>\r\n                                        <Typography gutterBottom variant=\"body2\" className={classes.text}>\r\n                                            {e.organization}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\">\r\n                                            {e.result}\r\n                                        </Typography>\r\n\r\n                                        <Typography variant=\"body2\">\r\n                                            {e.year}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                )\r\n                            })\r\n                            }\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography className={classes.subtitle} >\r\n                                О кандидате\r\n                                <span onClick={() => setAboutEdit(true)} className={classes.editBtn}>ред.</span>\r\n                            </Typography>\r\n                            {aboutEdit\r\n                                ? (\r\n                                    <AboutField onBlur={() => setAboutEdit(false)} autoFocus={true} value={about} onChangeText={setAbout} />\r\n                                )\r\n                                : (\r\n                                    <Typography gutterBottom variant=\"body2\" className={classes.text}>\r\n                                        {about}\r\n                                    </Typography>\r\n                                )\r\n                            }\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid xs={8} item className={classes.main} >\r\n\r\n                    <Grid item >\r\n                        <Grid container spacing={3}>\r\n                            <Grid item className={classes.mainItem}  >\r\n                                <Typography className={classes.subtitle} >\r\n                                    Ключевые навыки\r\n                                </Typography>\r\n\r\n                                <Box className={classes.skils} >\r\n                                    {data?.skill_set && data?.skill_set.map(s => {\r\n                                        return <Chip key={s} label={s} />\r\n                                    })}\r\n                                </Box>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} className={classes.mainItem}  >\r\n                                <Typography className={classes.subtitle} >\r\n                                    Опыт работы\r\n                                </Typography>\r\n                                {data?.experience && data?.experience.map((job, i) => {\r\n                                    return (<div key={i}>\r\n                                        <Typography variant=\"body2\" className={classes.lable}>\r\n                                            {`${job.company}, ${job.area} | ${job.position}`}\r\n                                        </Typography>\r\n\r\n                                        <Typography gutterBottom variant=\"body2\" className={classes.lable}>\r\n                                            {`${dataFormat(job.start)} - ${dataFormat(job.end)}`}\r\n                                        </Typography>\r\n                                        <Typography gutterBottom variant=\"body2\" className={classes.text + ' ' + classes.paragraph}>\r\n                                            {job.description}\r\n                                        </Typography>\r\n                                    </div>)\r\n                                })}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React, { FC } from 'react'\r\nimport CloseIcon from \"@material-ui/icons/Clear\";\r\nimport { createStyles, Fade, makeStyles, Paper, Theme } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        closeBtn: {\r\n            position: 'absolute',\r\n            top: 16, right: 16,\r\n            cursor: 'pointer',\r\n            '@media print': {\r\n                display: 'none'\r\n            }\r\n        },\r\n\r\n        paper: {\r\n            borderRadius: 16,\r\n            padding: theme.spacing(5),\r\n            position: 'relative',\r\n            '@media print': {\r\n                transform: 'scale(1.05)',\r\n                border: 'none',\r\n                boxShadow: 'none',\r\n            }\r\n        },\r\n    }),\r\n);\r\n\r\ninterface IProps {\r\n    children: React.ReactNode\r\n    minHeight?: number\r\n    onClose?: () => void\r\n}\r\n\r\nconst PaperClose: FC<IProps> = ({ children, minHeight, onClose }) => {\r\n    const [checked, setChecked] = React.useState(true);\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n    const timeOut = 300;\r\n    const closeHandler = () => {\r\n        setChecked(false);\r\n        if (onClose) onClose();\r\n        setTimeout(() => history.push('/'), timeOut);\r\n    }\r\n\r\n    return (\r\n        <Fade timeout={timeOut} in={checked}>\r\n            <Paper className={classes.paper} style={{ minHeight }}>\r\n                <div className={classes.closeBtn}>\r\n                    <div onClick={() => closeHandler()} >\r\n                        <CloseIcon color='action' />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </Paper>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default PaperClose","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, Link, Box, Chip, Container, createStyles, Fab, makeStyles, Theme, Fade, CircularProgress } from '@material-ui/core'\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport Resume from '../components/resume/Resume';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useAction';\r\nimport { ExportFormat } from '../models/format';\r\nimport PaperClose from '../components/paper-close/PaperClose';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { BoxCenter } from '../components/box-center/BoxCenter';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        content: {\r\n            maxWidth: 728,\r\n            paddingTop: theme.spacing(2),\r\n            paddingBottom: theme.spacing(3),\r\n            '@media print': {\r\n                padding: 0\r\n            }\r\n        },\r\n        smallestBtn: {\r\n            height: theme.spacing(4) + 2,\r\n            width: theme.spacing(4) + 2,\r\n            minHeight: 0,\r\n            marginRight: 12,\r\n            '& svg': {\r\n                height: 22,\r\n                width: 22,\r\n            }\r\n        },\r\n\r\n        chip: {\r\n            cursor: 'pointer'\r\n        },\r\n\r\n        noPrint: {\r\n            '@media print': {\r\n                display: 'none'\r\n            }\r\n        }\r\n    }),\r\n);\r\n\r\n\r\nexport const PageResume = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { resume, form } = useTypedSelector(state => state);\r\n    const { resume__getResume, resume__setResume, form__setAbout, form__getResumePreview, resume__setLoading } = useActions();\r\n\r\n    const [format, setFormat] = useState(form.format);\r\n    const [showLink, setShowLink] = useState(form.resumePreview !== null);\r\n    const [showResume, setShowResume] = useState(false);\r\n\r\n    const location = useLocation();\r\n\r\n    const getUrlParams = () => {\r\n        let format: ExportFormat = ExportFormat.withName;\r\n        const search = location.search.slice(1);\r\n        const id = location.pathname.split('resume/').pop() + '';;\r\n\r\n        switch (search) {\r\n            case ExportFormat.withName:\r\n                format = ExportFormat.withName;\r\n                break;\r\n            case ExportFormat.withOutName:\r\n                format = ExportFormat.withOutName\r\n                break;\r\n        }\r\n        return { format, id };\r\n    }\r\n        ;\r\n    useEffect(() => {\r\n        const { format, id } = getUrlParams();\r\n        resume__getResume(id, format);\r\n        setFormat(format);\r\n        if (form.resumePreview === null) {\r\n            form__getResumePreview(id);\r\n        }\r\n        return () => {\r\n            resume__setResume(null);\r\n            resume__setLoading(null);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (resume.loading === false) {\r\n\r\n            if (resume.data === null) {\r\n                history.push('/404');\r\n            } else setShowResume(true);\r\n        }\r\n\r\n    }, [resume.loading]);\r\n\r\n    useEffect(() => {\r\n        setShowLink(form.resumePreview !== null);\r\n    }, [form.resumePreview]);\r\n\r\n    const onClose = () => {\r\n        setShowResume(false);\r\n        setShowLink(false);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.content}>\r\n            <Fade in={showResume}>\r\n\r\n                <div className={classes.noPrint}>\r\n                    <Fab onClick={() => window.print()} className={classes.smallestBtn} color=\"primary\" aria-label=\"printing\">\r\n                        <PrintIcon />\r\n                    </Fab>\r\n                    <Fade in={showLink}>\r\n                        <Chip\r\n                            avatar={<Avatar alt=\"userAvatar\" src={form.resumePreview?.photo} />}\r\n                            style={{ fontWeight: 500 }}\r\n                            label={form.resumePreview?.name}\r\n                            component={Link}\r\n                            href={`https://hh.ru/resume/${form.resumePreview?.id}`}\r\n                            target=\"_blank\"\r\n                            underline=\"none\"\r\n                            className={classes.chip}\r\n                        />\r\n                    </Fade>\r\n                </div>\r\n\r\n            </Fade>\r\n\r\n\r\n            {/*     {form.resumePreview ? (       ) : 'not found'} */}\r\n            <Box mt={2} >\r\n                <PaperClose minHeight={960} onClose={onClose}>\r\n                    {showResume ? (\r\n\r\n                        <Resume data={resume.data} format={format} about={form.about} setAbout={form__setAbout} />\r\n\r\n                    ) : (\r\n\r\n                        <BoxCenter>\r\n                            <CircularProgress />\r\n                        </BoxCenter>\r\n\r\n                    )}\r\n                </PaperClose>\r\n            </Box>\r\n\r\n\r\n        </ Container >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Typography, Box, Container, Link } from '@material-ui/core';\r\nimport { BoxCenter } from '../components/box-center/BoxCenter';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nexport const Page404 = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <BoxCenter >\r\n                <Box>\r\n                    <Typography variant=\"h4\" component=\"h2\" paragraph >\r\n                        404! Страница не найдена\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" >\r\n                        <Link component={RouteLink} to='/'>\r\n                            На главную страницу\r\n                        </Link>\r\n                    </Typography>\r\n                </Box>\r\n            </BoxCenter>\r\n        </Container>\r\n    )\r\n}\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PageMain } from '../../pages/PageMain';\r\nimport { PageResume } from '../../pages/PageResume';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { Page404 } from '../../pages/Page404';\r\n\r\n\r\nexport const LayoutMain = () => {\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Switch>\r\n                <Route exact path='/' render={() => <PageMain />} />\r\n                <Route path='/resume/:userId' render={() => <PageResume />} />\r\n                <Route path='*' render={() => <Page404 />} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport './App.scss';\nimport { LayoutMain } from './layouts/LayoutMain';\nimport { ThemeProvider, unstable_createMuiStrictModeTheme } from '@material-ui/core/styles';\nimport { themeOptions } from './them';\n\nconst theme = unstable_createMuiStrictModeTheme(themeOptions);\n//basename={process.env.PUBLIC_URL}\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter >\n        <LayoutMain />\n      </HashRouter>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","import { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\r\n\r\nexport const themeOptions: ThemeOptions = {\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#2196f3',\r\n        },\r\n        secondary: {\r\n            main: '#f50057',\r\n        },\r\n    },\r\n};","import { combineReducers } from \"redux\";\r\nimport { formReducer } from \"./form/reducer\";\r\nimport { resumeReducer } from './resume/reducer';\r\n\r\nexport enum StoreSection {\r\n  form = \"form\",\r\n  resume = \"resume\",\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n  [StoreSection.form]: formReducer,\r\n  [StoreSection.resume]: resumeReducer,\r\n});\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>;\r\n","import { FormAction, IFormActionTypes } from \"./types\";\r\nimport { IResumePreview } from './../../models/resume';\r\nimport { ExportFormat } from \"../../models/format\";\r\n\r\nconst initialState = {\r\n  resumePreview: null as null | IResumePreview,\r\n  format: ExportFormat.withName as ExportFormat,\r\n  about: '' as string,\r\n  loading: false as boolean\r\n};\r\ntype IFormState = typeof initialState;\r\n\r\nexport const formReducer = (\r\n  state = initialState,\r\n  action: FormAction\r\n): IFormState => {\r\n  switch (action.type) {\r\n    case IFormActionTypes.FORM__SET_RESUME_PREVIEW:\r\n      return { ...state, resumePreview: action.payload };\r\n    case IFormActionTypes.FORM__SET_ABOUT:\r\n      return { ...state, about: action.payload };\r\n    case IFormActionTypes.FORM__SET_FORMAT:\r\n      return { ...state, format: action.payload };\r\n    case IFormActionTypes.FORM__SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ResumeAction, IResumeActionTypes } from \"./types\";\r\nimport { IResume } from '../../models/resume';\r\n\r\nconst initialState = {\r\n  data: null as null | IResume,\r\n  loading: null as null | boolean\r\n};\r\ntype IResumeState = typeof initialState;\r\n\r\nexport const resumeReducer = (\r\n  state = initialState,\r\n  action: ResumeAction\r\n): IResumeState => {\r\n  switch (action.type) {\r\n    case IResumeActionTypes.RESUME__SET_RESUME:\r\n      return { ...state, data: action.payload };\r\n    case IResumeActionTypes.RESUME__SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer, IRootState } from \"./reducers\";\r\n\r\nexport type GetState = () => IRootState;\r\nconst composeEnhancers = composeWithDevTools({\r\n  trace: true,\r\n  traceLimit: 25,\r\n});\r\n\r\nexport const STORE = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport { STORE } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={STORE}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}